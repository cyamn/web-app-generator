import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { getSession, useSession } from "next-auth/react";

import { Header } from "@/components/header";
import { ProjectList } from "@/components/projects";
import { useProjectList } from "@/hooks/use-project";
import { Layout } from "@/layout";

const Projects: NextPage = () => {
  const { data: session } = useSession();
  const { projects, isError, isLoading } = useProjectList();

  if (session == null) return null;
  if (isError) return <div>failed to load</div>;
  if (isLoading) {
    console.log("loading");
  }

  return (
    <>
      <Head>
        <title>My projects</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout
        header={<Header item="Apps" user={session.user} />}
        content={<ProjectList projects={projects} />}
      />
    </>
  );
};

export default Projects;

import { createServerSideHelpers } from "@trpc/react-query/server";
import superjson from "superjson";

import { appRouter } from "@/server/api/root";
import { prisma } from "@/server/database";

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: "/",
        permanent: false,
      },
    };
  }

  const helpers = createServerSideHelpers({
    router: appRouter,
    ctx: { prisma, session },
    transformer: superjson, // optional - adds superjson serialization
  });

  await helpers.projects.listAll.prefetch();

  return {
    props: {
      session,
      trpcState: helpers.dehydrate(),
    },
  };
};
