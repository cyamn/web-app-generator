import { faTable } from "@fortawesome/free-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";

import { Header } from "@/components/header";
import { TableList } from "@/components/table-list";
import { TableView } from "@/components/table-view";
import { ViewList } from "@/components/view-list";
import { type Table } from "@/data/table";
import { Layout } from "@/layout";
import { api } from "@/utils/api";

dayjs.extend(relativeTime);

const Table: NextPage = () => {
  const router = useRouter();
  const { data: sessionData } = useSession();
  const { project: projectName } = router.query as { project: string };

  if (!sessionData) return <div>not logged in</div>;

  return (
    <>
      <Head>
        <title>{projectName}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout
        header={
          <Header
            item={
              <div className="flex flex-row items-center">{projectName}</div>
            }
            user={sessionData.user}
          />
        }
        sidebarLeft={
          <div className="flex h-full flex-col bg-slate-700">
            <div className="flex h-full flex-row">
              <ViewList activeView={"table"} projectName={projectName} />
              <div className="flex h-full w-full flex-col justify-between bg-slate-700">
                <TableList projectName={projectName} />
              </div>
            </div>
            {/* <StatusBar /> */}
          </div>
        }
        content={<TablesOverview projectName={projectName} />}
      />
    </>
  );
};

type TablesOverviewProperties = {
  projectName: string;
};

const TablesOverview: React.FC<TablesOverviewProperties> = ({
  projectName,
}) => {
  const {
    data: tablesWithMeta,
    error,
    isError,
    isLoading,
  } = api.tables.getAll.useQuery(projectName);

  const context = api.useContext();
  const { mutate, isLoading: isCreating } = api.tables.add.useMutation({
    onSuccess: () => {
      void context.tables.listAll.invalidate(projectName);
      void context.tables.getAll.invalidate(projectName);
    },
  });

  if (isError) return <div>{error.message}</div>;
  if (isLoading) return <div>loading...</div>;

  const addTable = (): void => {
    const tableName = prompt(
      "Please enter your table name:",
      "my awesome table"
    );
    if (tableName === null) return;
    mutate({ projectName, tableName });
  };

  return (
    <>
      <h1 className="p-3 text-center">All Tables in {projectName}</h1>
      <div className="grid grid-cols-3 px-20">
        {tablesWithMeta.map((tableWithMeta) => (
          <TableDetailedItem
            updatedAt={tableWithMeta.updatedAt}
            key={tableWithMeta.table.name}
            table={tableWithMeta.table}
            projectName={projectName}
          />
        ))}
        <div className="m-2">
          <button
            disabled={isCreating}
            onClick={addTable}
            className="mt-6 flex h-64 w-full flex-row items-center justify-center rounded-lg bg-slate-400 p-2 text-slate-100 hover:bg-slate-500"
          >
            <h1>{isCreating ? "creating..." : "+ Add Table"}</h1>
          </button>
        </div>
      </div>
    </>
  );
};

interface TableDetailedItemProperties {
  table: Table;
  projectName: string;
  updatedAt: Date;
}

export const TableDetailedItem: React.FC<TableDetailedItemProperties> = ({
  table,
  projectName,
  updatedAt,
}) => {
  return (
    <Link href={`/${projectName}/table/${table.name}`}>
      <div className="m-2">
        <div className="grid w-full grid-cols-2">
          <div>
            <FontAwesomeIcon icon={faTable} className="ml-1 mr-2" />
            {table.name}
          </div>
          <div className="pr-2 text-right text-slate-400">
            {dayjs(updatedAt).fromNow()}
          </div>
        </div>
        <div className="max-h-64 overflow-hidden  rounded-lg border border-slate-300 hover:shadow-md">
          <TableView table={table} />
        </div>
      </div>
    </Link>
  );
};

export default Table;
